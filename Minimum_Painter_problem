#include<bits/stdc++.h>
using namespace std;

bool ifPossible(int* arr,int n,int k,int mid,int l,int h)
{
    int count=1;int sum=0;
    for(int i=0;i<n;i++)
    {
        if(sum + arr[i]<=mid)
        {
            sum=sum+arr[i];
        }else{
            sum=arr[i];
            count++;
        }
    }



    if(count<=k)
    {
        return true;
    }
    else{
        return false;
    }
}

int partition(int* arr,int n,int k)
{
    int l=*max_element(arr,arr+n);
    int h=0;
    for(int i=0;i<n;i++)
    {
        h+=arr[i];
    }

    int mid;
    int answer=0;
    while(l<=h)
    {   
        mid=(l+h)/2;

        if(ifPossible(arr,n,k,mid,l,h))
        {
            answer=mid;
            h=mid-1;
        }
        else{
            l=mid+1;
        }
    }

}

int main() 
{ 
    int arr[] = { 10, 20, 60, 50, 30, 40 }; 
    int n = sizeof(arr) / sizeof(arr[0]); 
    int k = 3; 
    cout << partition(arr, n, k) << endl; 
  
    return 0; 
} 