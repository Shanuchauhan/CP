vector <int> bottomView(Node *root)
{
   vector<int>res;
   map<int,vector<int>>mp;
   int h=0;
   queue<pair<Node*,int>>q;
   q.push(make_pair(root,0));
   while(q.empty()==false)
   {
       auto p=q.front();
       Node* curr=p.first;
       h=p.second;
       mp[h].push_back(curr->data);
       q.pop();
       if(curr->left!=NULL)
       {
           q.push(make_pair(curr->left,h-1));
       }
       if(curr->right!=NULL)
       {
           q.push(make_pair(curr->right,h+1));
       }
   }
   map<int,vector<int>>::iterator it;
   for(it=mp.begin();it!=mp.end();it++)
   {
       res.push_back(it->second[it->second.size()-1]);
   }
   return res;
   
}